##
# Copyright (C) 2024 Hedera Hashgraph, LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
##

name: "ZXC: Build ScaleSet Images"
# This reusable component is called by the following workflows:
# - .github/workflows/flow-pull-request-checks.yaml
# - .github/workflows/flow-build-application.yaml

on:
  workflow_call:
    inputs:
      ## Base Operating System Image
      ## Options include:
      ## - ubuntu-22.04
      base-os-image:
        description: "Operating System Image:"
        type: string
        required: true

      ## The tag version to be used
      tag-version:
        description: "Tag Version:"
        type: string
        required: true

      ## Upstream Github Action Runner Version
      runner-version:
        description: "Runner Version:"
        type: string
        required: true

      ## Upstream Github Action Runner Container Hooks Version
      runner-container-hooks-version:
        description: "Container Hooks Version:"
        type: string
        required: false
        default: "0.6.1"

      ## Upstream Docker Version
      docker-version:
        description: "Docker Version:"
        type: string
        required: false
        default: "25.0.5"

      ## Upstream Docker Buildx Version
      docker-buildx-version:
        description: "Docker Buildx Version:"
        type: string
        required: false
        default: "0.16.2"

      # Upstream Github CLI Version
      gh-cli-version:
        description: "Github CLI Version:"
        type: string
        required: false
        default: "2.54.0"

      ## Linux Architectures for Multi-Arch Builds
      platforms:
        description: "Platforms:"
        type: string
        required: false
        default: "linux/amd64"

      dry-run-enabled:
        description: "Perform Dry Run"
        type: boolean
        required: false
        default: false

      custom-job-label:
        description: "Custom Job Label:"
        type: string
        required: false
        default: "Build"

defaults:
  run:
    shell: bash

env:
  TOOL_CACHE_ARTIFACT_NAME: "tool-cache.tar.gz"

permissions:
  id-token: write
  contents: read
  packages: write

jobs:
  create-tool-cache:
    name: Create Tool Cache
    runs-on: ubuntu-22.04
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@002fdce3c6a235733a90a27c80493a3241e56863 # v2.12.1
        with:
          egress-policy: audit

      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install WGet
        run: sudo apt update && sudo apt install -y --no-install-recommends wget

      - name: Clear Hosted Tool Cache
        run: rm -rvf "${{ runner.tool_cache }}"/*

      - name: Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@26f734c2779b00b7dda794207734c511110a4368 # v3.0.0

      - name: Setup Java
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
        with:
          distribution: temurin
          java-version: "21"

      - name: Setup Java
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
        with:
          distribution: temurin
          java-version: "21.0.1"

      - name: Setup NodeJS 16
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 16

      - name: Setup NodeJS 18
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 18

      - name: Setup NodeJS 19
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 19

      - name: Setup NodeJS 20
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 20

      - name: Setup NodeJS 22
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 22

      - name: Setup GoLang 1.20
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: "1.20"

      - name: Setup GoLang 1.21.0
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: "1.21.0"

      - name: Setup Kind
        uses: helm/kind-action@a1b0e391336a6ee6713a0583f8c6240d70863de3 # v1.12.0
        with:
          install_only: true

      - name: Setup Helm v3.12.3
        uses: azure/setup-helm@b9e51907a09c216f16ebe8536097933489208112 # v4.3.0
        with:
          version: "v3.12.3" # helm version

      - name: Setup Helm Latest
        uses: azure/setup-helm@b9e51907a09c216f16ebe8536097933489208112 # v4.3.0

      - name: Setup Docker Buildx Support
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
        with:
          version: v0.16.2
          driver-opts: network=host

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2

      - name: Archive Tool Cache
        working-directory: ${{ runner.tool_cache }}
        run: tar -czf ${{ env.TOOL_CACHE_ARTIFACT_NAME }} *

      - name: Upload Tool Cache
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: "ScaleSet Tools (${{ inputs.base-os-image }})"
          retention-days: 1
          path: ${{ runner.tool_cache }}/${{ env.TOOL_CACHE_ARTIFACT_NAME }}

  build-scaleset-images:
    name: ${{ inputs.custom-job-label || 'Build' }}
    runs-on: ubuntu-22.04
    needs:
      - create-tool-cache
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@002fdce3c6a235733a90a27c80493a3241e56863 # v2.12.1
        with:
          egress-policy: audit

      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Download Tool Cache
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: "ScaleSet Tools (${{ inputs.base-os-image }})"
          path: ${{ github.workspace }}/scaleset/runner/tools

      - name: Unpack Tool Cache
        run: |
          tar -xzf ${{ github.workspace }}/scaleset/runner/tools/${{ env.TOOL_CACHE_ARTIFACT_NAME }} -C ${{ github.workspace }}/scaleset/runner/tools/
          rm -f ${{ github.workspace }}/scaleset/runner/tools/${{ env.TOOL_CACHE_ARTIFACT_NAME }}

      - name: Setup QEmu Support
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

      - name: Setup Docker Buildx Support
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
        with:
          version: v0.16.2
          driver-opts: network=host

      - name: Show Docker Version
        run: docker version

      - name: Show Docker Info
        run: docker info

      - name: Docker Login (Github)
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        if: ${{ inputs.dry-run-enabled != true }}
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Calculate Docker Registry
        id: registry
        run: |
          DOCKER_REGISTRY_PREFIX="ghcr.io/${{ github.repository }}"
          IMG_RESULT="push"
          
          if [[ "${{ inputs.dry-run-enabled }}" == "true" ]]; then
            DOCKER_REGISTRY_PREFIX="local"
            IMG_RESULT="cache"
          fi
          
          echo "prefix=${DOCKER_REGISTRY_PREFIX}" >>"${GITHUB_OUTPUT}"
          echo "operation=${IMG_RESULT}" >>"${GITHUB_OUTPUT}"

      - name: Calculate Docker Tag
        id: docker-tag
        run: |
          TAG_VERSION="${{ inputs.tag-version || inputs.runner-version }}"
          echo "version=${TAG_VERSION//+/-}" >>"${GITHUB_OUTPUT}"

      - name: Build Image
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: ${{ github.workspace }}/scaleset/runner
          platforms: ${{ inputs.platforms }}
          push: ${{ steps.registry.outputs.operation == 'push' }}
          load: ${{ steps.registry.outputs.operation == 'load' }}
          tags: |
            ${{ steps.registry.outputs.prefix }}/scaleset-runner:${{ inputs.base-os-image }}
            ${{ steps.registry.outputs.prefix }}/scaleset-runner:v${{ steps.docker-tag.outputs.version }}-${{ inputs.base-os-image }}
          build-args: |
            TARGETOS=linux
            TARGETARCH=amd64
            RUNNER_VERSION=${{ inputs.runner-version }}
            RUNNER_CONTAINER_HOOKS_VERSION=${{ inputs.runner-container-hooks-version }}
            DOCKER_VERSION=${{ inputs.docker-version }}
            BUILDX_VERSION=${{ inputs.docker-buildx-version }}
            GH_CLI_VERSION=${{ inputs.gh-cli-version }}
            
