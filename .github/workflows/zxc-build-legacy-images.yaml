##
# Copyright (C) 2024 Hedera Hashgraph, LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
##

name: "ZXC: Build Legacy Images"
# This reusable component is called by the following workflows:
# - .github/workflows/flow-pull-request-checks.yaml
# - .github/workflows/flow-build-application.yaml

on:
  workflow_call:
    inputs:
      ## Base Operating System Image
      ## Options include:
      ## - ubuntu-20.04
      ## - ubuntu-22.04
      base-os-image:
        description: "Operating System Image:"
        type: string
        required: true

      ## The tag version to be used
      tag-version:
        description: "Tag Version:"
        type: string
        required: true

      ## Upstream Github Action Runner Version
      runner-version:
        description: "Runner Version:"
        type: string
        required: true

      ## Upstream Github Action Runner Container Hooks Version
      runner-container-hooks-version:
        description: "Container Hooks Version:"
        type: string
        required: false
        default: "0.6.1"

      ## Upstream Docker Version
      docker-version:
        description: "Docker Version:"
        type: string
        required: false
        default: "25.0.5"

      ## Linux Architectures for Multi-Arch Builds
      platforms:
        description: "Platforms:"
        type: string
        required: false
        default: "linux/amd64"

      build-default-image:
        description: "Build Default Image"
        type: boolean
        required: false
        default: true

      build-dind-image:
        description: "Build DinD Image"
        type: boolean
        required: false
        default: false

      build-dind-rootless-image:
        description: "Build DinD Rootless Image"
        type: boolean
        required: false
        default: false

      dry-run-enabled:
        description: "Perform Dry Run"
        type: boolean
        required: false
        default: false

      custom-job-label:
        description: "Custom Job Label:"
        type: string
        required: false
        default: "Build"

defaults:
  run:
    shell: bash

env:
  OS_IMAGE: ${{ inputs.base-os-image }}
  RUNNER_VERSION: ${{ inputs.runner-version }}
  RUNNER_CONTAINER_HOOKS_VERSION: ${{ inputs.runner-container-hooks-version }}
  DOCKER_VERSION: ${{ inputs.docker-version }}
  PLATFORMS: ${{ inputs.platforms }}
  TOOL_CACHE_ARTIFACT_NAME: "tool-cache.tar.gz"

permissions:
  id-token: write
  contents: read
  packages: write

jobs:
  create-tool-cache:
    name: Create Tool Cache
    runs-on: ubuntu-22.04
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - name: Checkout Code
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1

      - name: Install WGet
        run: sudo apt update && sudo apt install -y --no-install-recommends wget

      - name: Clear Hosted Tool Cache
        run: rm -rvf "${{ runner.tool_cache }}"/*

      - name: Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@f0990588f1e5b5af6827153b93673613abdc6ec7 # v2.1.1

      - name: Setup Java
        uses: actions/setup-java@b36c23c0d998641eff861008f374ee103c25ac73 # v4.4.0
        with:
          distribution: temurin
          java-version: 21

      - name: Setup NodeJS 16
        uses: actions/setup-node@0a44ba7841725637a19e28fa30b79a866c81b0a6 # v4.0.4
        with:
          node-version: 16

      - name: Setup NodeJS 18
        uses: actions/setup-node@0a44ba7841725637a19e28fa30b79a866c81b0a6 # v4.0.4
        with:
          node-version: 18

      - name: Setup NodeJS 20
        uses: actions/setup-node@0a44ba7841725637a19e28fa30b79a866c81b0a6 # v4.0.4
        with:
          node-version: 20

      - name: Setup NodeJS 22
        uses: actions/setup-node@0a44ba7841725637a19e28fa30b79a866c81b0a6 # v4.0.4
        with:
          node-version: 22

      - name: Setup Kind
        uses: helm/kind-action@0025e74a8c7512023d06dc019c617aa3cf561fde # v1.10.0
        with:
          install_only: true

      - name: Setup Helm v3.12.3
        uses: azure/setup-helm@fe7b79cd5ee1e45176fcad797de68ecaf3ca4814 # v4.2.0
        with:
          version: "v3.12.3" # helm version

      - name: Setup Helm Latest
        uses: azure/setup-helm@fe7b79cd5ee1e45176fcad797de68ecaf3ca4814 # v4.2.0

      - name: Setup QEmu Support
        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0

      - name: Setup Docker Buildx Support
        uses: docker/setup-buildx-action@8026d2bc3645ea78b0d2544766a1225eb5691f89 # v3.7.0
        with:
          version: v0.16.1
          driver-opts: network=host

      - name: Archive Tool Cache
        working-directory: ${{ runner.tool_cache }}
        run: tar -czf ${{ env.TOOL_CACHE_ARTIFACT_NAME }} *

      - name: Upload Tool Cache
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: "Tools (${{ inputs.base-os-image }})"
          retention-days: 1
          path: ${{ runner.tool_cache }}/${{ env.TOOL_CACHE_ARTIFACT_NAME }}

  build-legacy-images:
    name: ${{ inputs.custom-job-label || 'Build' }}
#    runs-on: ubuntu-22.04
    runs-on: ubuntu-22.04
    needs:
      - create-tool-cache
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - name: Checkout Code
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1

      - name: Download Tool Cache
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: "Tools (${{ inputs.base-os-image }})"
          path: ${{ github.workspace }}/legacy/runner/tools

      - name: Unpack Tool Cache
        run: |
          tar -xzf ${{ github.workspace }}/legacy/runner/tools/${{ env.TOOL_CACHE_ARTIFACT_NAME }} -C ${{ github.workspace }}/legacy/runner/tools/
          rm -f ${{ github.workspace }}/legacy/runner/tools/${{ env.TOOL_CACHE_ARTIFACT_NAME }}

      - name: Install Make
        run: |
          if ! command -v make >/dev/null 2>&1; then
            echo "::group::Updating APT Repository Indices"
              sudo apt update
            echo "::endgroup::"
            echo "::group::Installing Make"
              sudo apt install -y make
            echo "::endgroup::"
          fi

      - name: Setup QEmu Support
        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0

      - name: Setup Docker Buildx Support
        uses: docker/setup-buildx-action@8026d2bc3645ea78b0d2544766a1225eb5691f89 # v3.7.0
        with:
          version: v0.16.1
          driver-opts: network=host

      - name: Show Docker Version
        run: docker version

      - name: Show Docker Info
        run: docker info

      - name: Docker Login (Github)
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        if: ${{ inputs.dry-run-enabled != true }}
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Calculate Docker Registry
        id: registry
        run: |
          DOCKER_REGISTRY_PREFIX="ghcr.io/${{ github.repository }}"
          IMG_RESULT="push"
          
          if [[ "${{ inputs.dry-run-enabled }}" == "true" ]]; then
            DOCKER_REGISTRY_PREFIX="local"
            IMG_RESULT="cache"
          fi
          
          echo "prefix=${DOCKER_REGISTRY_PREFIX}" >>"${GITHUB_OUTPUT}"
          echo "operation=${IMG_RESULT}" >>"${GITHUB_OUTPUT}"

      - name: Calculate Docker Tag
        id: docker-tag
        run: |
          TAG_VERSION="${{ inputs.tag-version || inputs.runner-version }}"
          echo "version=${TAG_VERSION//+/-}" >>"${GITHUB_OUTPUT}"

      - name: Build Default Image
        env:
          DOCKER_USER: ${{ steps.registry.outputs.prefix }}
          IMG_RESULT: ${{ steps.registry.outputs.operation }}
          TAG_VERSION: ${{ steps.docker-tag.outputs.version }}
        working-directory: legacy/runner
        if: ${{ inputs.build-default-image }}
        run: make docker-buildx-default

      - name: Build DinD Image
        env:
          DOCKER_USER: ${{ steps.registry.outputs.prefix }}
          IMG_RESULT: ${{ steps.registry.outputs.operation }}
          TAG_VERSION: ${{ steps.docker-tag.outputs.version }}
        working-directory: legacy/runner
        if: ${{ inputs.build-dind-image }}
        run: make docker-buildx-dind

      - name: Build DinD Rootless Image
        env:
          DOCKER_USER: ${{ steps.registry.outputs.prefix }}
          IMG_RESULT: ${{ steps.registry.outputs.operation }}
          TAG_VERSION: ${{ steps.docker-tag.outputs.version }}
        working-directory: legacy/runner
        if: ${{ inputs.build-dind-rootless-image }}
        run: make docker-buildx-dind-rootless
